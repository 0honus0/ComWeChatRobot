// WeChatRobotCOM.idl: WeChatRobotCOM 的 IDL 源
//

// 此文件将由 MIDL 工具处理以
// 生成类型库(WeChatRobotCOM.tlb)和封送处理代码。

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(a836e359-59b2-4e01-9b0c-0e5a5a2efa22),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IWeChatRobot : IDispatch
{
	[id(1)] HRESULT CStartRobotService([out, retval] int* __result);
	[id(2)] HRESULT CStopRobotService([out, retval] int* __result);
	[id(3)] HRESULT CSendText([in] BSTR wxid, [in] BSTR wxmsg, [out, retval] int* __result);
	[id(4)] HRESULT CSendImage([in] BSTR wxid, [in] BSTR imagepath, [out, retval] int* __result);
	[id(5)] HRESULT CSendFile([in] BSTR wxid, [in] BSTR filepath, [out, retval] int* __result);
	[id(6)] HRESULT CSendArticle([in] BSTR wxid, [in] BSTR title, [in] BSTR abstract, [in] BSTR url, [in] BSTR imgpath, [out, retval] int* __result);
	[id(7)] HRESULT CSendCard([in] BSTR receiver, [in] BSTR sharedwxid, [in] BSTR nickname, [out, retval] int* __result);
	[id(8)] HRESULT CGetFriendList([out, retval] VARIANT* __result);
	[id(9)] HRESULT CGetFriendListString([out, retval] BSTR* __result);
	[id(10)] HRESULT CGetWxUserInfo([in] BSTR wxid, [out, retval] BSTR* __result);
	[id(11)] HRESULT CGetSelfInfo([out, retval] BSTR* __result);
	[id(12)] HRESULT CCheckFriendStatusInit([out, retval] int* __result);
	[id(13)] HRESULT CCheckFriendStatus([in] BSTR wxid, [out, retval] int* __result);
	[id(14)] HRESULT CCheckFriendStatusFinish([out, retval] int* __result);
	[id(15)] HRESULT CGetComWorkPath([out, retval] BSTR* __result);
	[id(16)] HRESULT CStartReceiveMessage([out, retval] int* __result);
	[id(17)] HRESULT CReceiveMessage([out, retval] VARIANT* __result);
	[id(18)] HRESULT CStopReceiveMessage([out, retval] int* __result);
	[id(19)] HRESULT CSendAtText([in] BSTR chatroomid, [in] VARIANT* wxid, [in] BSTR wxmsg, [in] BOOL AutoNickName, [out, retval] int* __result);
	[id(20)] HRESULT CGetChatRoomMembers([in] BSTR chatroomid, [out, retval] VARIANT* __result);
	[id(21)] HRESULT CGetDbHandles([out, retval] VARIANT* __result);
	[id(22)] HRESULT CExecuteSQL([in] DWORD DbHandle, [in] BSTR sql, [out, retval] VARIANT* __result);
	[id(23)] HRESULT CBackupSQLiteDB([in] DWORD DbHandle, [in] BSTR savepath, [out, retval] int* __result);
	[id(24)] HRESULT CVerifyFriendApply([in] BSTR v3, [in] BSTR v4, [out, retval] int* __result);
	[id(25)] HRESULT CAddFriendByWxid([in] BSTR wxid, [in] BSTR message, [out, retval] int* __result);
	[id(26)] HRESULT CAddFriendByV3([in] BSTR v3, [in] BSTR message, [in] int AddType, [out, retval] int* __result);
	[id(27)] HRESULT CGetWeChatVer([out, retval] BSTR* __result);
	[id(28)] HRESULT CStartWeChat([out, retval] int* __result);
	[id(29)] HRESULT CSearchContactByNet([in] BSTR keyword, [out, retval] VARIANT* __result);
	[id(30)] HRESULT CAddBrandContact([in] BSTR PublicId, [out, retval] int* __result);
	[id(31)] HRESULT CHookVoiceMsg([in] BSTR savepath, [out, retval] int* __result);
	[id(32)] HRESULT CUnHookVoiceMsg([out, retval] int* __result);
	[id(33)] HRESULT CHookImageMsg([in] BSTR savepath, [out, retval] int* __result);
	[id(34)] HRESULT CUnHookImageMsg([out, retval] int* __result);
	[id(35)] HRESULT CChangeWeChatVer([in] BSTR verStr, [out, retval] int* __result);
};
[
	uuid(721abb35-141a-4aa2-94f2-762e2833fa6c),
	version(1.0),
]
library WeChatRobotCOMLib
{
	importlib("stdole2.tlb");
	[
		uuid(4ce7f5e1-2c93-4bfe-86ac-886452e47475)
	]
	coclass WeChatRobot
	{
		[default] interface IWeChatRobot;
	};
};

import "shobjidl.idl";
